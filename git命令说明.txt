git的使用

/*******************新建工程提交步骤********************/
$git init
$git status 
$git add .
$git commit -m "版本号注释"  
//在Github上创建好Git仓库之后我们就可以和本地仓库进行关联了
$git remote add origin https://github.com/zxj782819517/xiaoneiwang.git
$ git push -u origin master

/*******************git命令详解********************/
git init
以当前目录文件创建一个本地的仓库   创建版本库
git status    
查看暂存区的状态 
检查当前仓库的状态，查看暂存区的状态，即查看仓库文件是否在暂存区
当文件存在仓库且在暂存区时文件名为绿色，否则未在暂存区的文件为红色 
git add test.txt
git add .          //提交所有文件
将文件提交到暂存区
git commit -m "版本号注释"  
将文件提交到本地库
git reflog test.txt
查看文件提交的版本号
git reset --hard HEAD^ →回退一个版本
git reset --hard HEAD~n →回退n个版本（版本都是针对当前版本）
git reset --hard 版本号 →到所指定的版本号的版本
git checkout 文件名 →还原文件

git reset 文件名 →撤销某个文件暂存区的提交

git rm --cached 文件名→去掉某个文件的版本追踪

git branch 分支名 →创建分支

git checkout 分支名→切换分支

git merge 分支名→合并分支（注意，主干合并分支的时候要先切换到主干）
其他命令：
 	touch 文件名 →创建一个文件
                 cat 文件名 →显示文本内容 

/*******************git本地仓库步骤********************/
向仓库中添加文件流程
（$git status 查看仓库状态） 
$git init                                    ----创建仓库----
$git add '文件名'                       -----暂存区-----
$git commit -m '提交说明'         -----工作区-----

/*******************git安装及设置步骤********************/
设置Git的user name和email：
安装完成还需最后一步配置（从开始菜单或者桌面找到"Git"->"Git Bash"在命令行输入：）

a、设置用户名：git config -- global user.name "你在github上注册的用户名"

b、设置用户邮箱：git config -- global user.email "注册时候的邮箱"

c、配置好后，用git config -- list 命令来看看是否配置成功

注意：git config -- global 参数，有了这个参数表示你这台机器上所有的git仓库都会使用这个配置，当然你也可以对某个仓库指定不同的用户名和邮箱。

/*******************git创建本地仓库及上传远程仓库详细步骤********************/
 第一步：我们需要先创建一个本地的仓库（也就是一个文件夹）。我在F盘创建了一个TEST文件，右击这个文件夹点击GIT Bash Here弹出命令窗口（也可以通过命令行来新建一个文件夹）。

 第二步：通过命令git init把这个文件夹变成Git可管理的仓库
这时你会发现TEST里面多了个.git文件夹，它是Git用来跟踪和管理版本库的。如果你看不到，是因为它默认是隐藏文件，那你就需要设置一下让隐藏文件可见。

 第三步：这时候你就可以把你的项目粘贴到这个本地Git仓库里面（粘贴后你可以通过git status来查看你当前的状态），然后通过git add把项目添加到仓库（或git add .把该目录下的所有文件添加到仓库，注意点是用空格隔开的）。在这个过程中你其实可以一直使用git status来查看你当前的状态。

第四步：用git commit把项目提交仓库

由于本地Git仓库和Github仓库之间的传输是通过SSH加密的，所以连接时需要设置一下：
第五步：创建SSH KEY。先看一下你C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，没有就通过下面命令创建
$ssh-keygen -t rsa -C"youremail@example.com"

第六步：登录Github,找到右上角的图标，打开点进里面的Settings，再选中里面的SSH and GPG KEYS，点击右上角的New SSH key，然后Title里面随便填，再把刚才id_rsa.pub里面的内容复制到Title下面的Key内容框里面，最后点击Add SSH key，这样就完成了SSH Key的加密。具体步骤也可看下面：

第七步：在Github上创建一个Git仓库。
 你可以直接点New repository来创建，比如我创建了一个xiaoneiwang的仓库。

第八步：在Github上创建好Git仓库之后我们就可以和本地仓库进行关联了，根据创建好的Git仓库页面的提示，可以在本地TEST仓库的命令行输入：
$git remote add origin https://github.com/zxj782819517/xiaoneiwang.git

第九步：关联好之后我们就可以把本地库的所有内容推送到远程仓库（也就是Github）上了，通过：
$ git push -u origin master

由于新建的远程仓库是空的，所以要加上-u这个参数，等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了：
$ git push origin master

可能出现问题：
这是由于你新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：
$git pull --rebase origin master
这时你再push就能成功了

